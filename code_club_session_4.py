# -*- coding: utf-8 -*-
"""Code Club Session 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/warwickdatascience/beginners-python/blob/master/session_four/session_four_blank_template.ipynb

<a href="https://colab.research.google.com/github/warwickdatascience/beginners-python/blob/master/session_four/session_four_blank_template.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>

<center>Spotted a mistake? Report it <a href="https://github.com/warwickdatascience/beginners-python/issues/new">here</a></center>

# Beginner's Pythonâ€”Session Four Template

## Non-numeric Lists

### Introduction

Create a list of numbers (integers, both positive and negative, and floats)
"""

integers_list = [2,4,-6,8.2]

Create a list of strings

string_list = ["Fox", "Dog", "Cat"]

"""Create a Boolean list"""

boolean_list = [True, False, True]

"""Create a list with mixed types"""

mixed_list = ["Fox", True, 1]

"""### Standard Puzzles

Create a list of the original Star Wars film titles
"""

starwars_films = ["Film 1", "Film 2", "Film 3"]

"""Create a list containing two lists of two elements"""

list_of_lists = [
[1,2], 
[3,4]
]

"""### Bonus Puzzles

Which of the three examples given in the presentation are suitable for modelling using a list?

The heights of individuala in an experiment

## Extracting List Elements

### Introduction

Create a list of strings and extract the third element
"""

list = ["Cat","Dog","Bunny"]
# extract index 2
list[2]

"""Use negative indexing to extract an element from a list"""

list[-2]
#extract second to last element

"""### Standard Puzzles

Create a list of five colours
"""

colours = ["red", "orange", 
"yellow", "green", 
"blue"]

"""Use positive indexing to extract the middle element of the list"""

colours[2]

"""Repeat this using negative indexing"""

colours[-3]

"""Which index would you use to extract the $n$th element of a list?

By using index n -1

### Bonus Puzzles

Extract the second sub-list from the list of lists created earlier
"""

list_of_lists[1]

"""Extract the element with value 3 from the list of lists"""

list_of_lists[1][0]

"""## Slicing Lists

### Introduction

Create a list and using slicing to extract a sub-list
"""

weather = [23, 32, 33, 37, 35]
#temperture over the last 3 days
weather[0:3]

"""### Standard Puzzles

Create a list of the seven letters of the alphabet and use list slicing to extract the middle three
"""

alphabet = ["A", "B", "C", "D",
            "E", "F", "G"]
alphabet[2:5]

"""Repeat this using negative indexing"""

alphabet[-5:-2]

"""### Bonus Puzzles

What happens when we omit an index from one side of the colon?
"""

alphabet[2:]

"""Missing index

Use the slice `1:6:2` on the dwarfs list. What does it do?
"""

alphabet[1:6:2]

"""It gives the elements of the index written

Print the middle three alphabet in reverse order
"""

alphabet[5:2:-1]

"""Reverse the entire dwarfs list"""

alphabet[::-1]

"""## Manipulating Lists

### Introduction

Create a list and append, overwrite, and delete (by both value and position) elements
"""

guests = ["Ann", "Bob", "Cat"]
guests.append("Dan")
print(guests)

"""Use the `.remove()` list method to remove a duplicate value as well as a value that isn't contained in the list"""

guests = ["Ann", "Bob", "Cat", "Bob"]
guests.remove("Bob")
print(guests)
guests.remove("Barry")

"""### Standard Puzzles

Create a list containing the numbers $23$, $14$, $45$, $666$, $74$, $3$, and $78$
"""

num = [ 23, 14, 45,
       666, 74, 3, 78]

"""Append the number $4$ to the end of the list"""

num.append(4)
print(num)

"""Sort the list in ascending order using the `.sort()` method"""

num.sort()
print(num)

"""Replace the smallest element with $2$"""

num[0] = 2
print(num)

"""Remove the fifth largest number"""

del num[-5]
print(num)

"""Find the average of the remaining numbers"""

average = sum(num)/len(num)
print(average)

"""### Bonus Puzzles

How can you remove the largest/smallest element of a list without sorting?

You can use `my_list.remove(min(my_list))`/`my_list.remove(max(my_list))` provided the min/max element is not duplicated

## Tuples

### Introduction

Create a tuple
"""

tuple_ex = (1,2,3)

"""Use indexing/slicing to extract elements/sub-tuples of the tuple"""

slice_tuple = tuple_ex[0]
print(slice_tuple)

"""### Standard Puzzles

Create a tuple containing a number, a string, and a Boolean
"""

tuple1 = (1, "Fox", True)

"""Extract the Boolean value"""

print(tuple1[-1])

"""Attempt to manipulate the tuple"""

tuple1.append(4)
print(tuple1)

"""Create a list and tuple and check their types"""

print(type([1,2,3]))
print(type((1,2,3)))

"""### Bonus Puzzles

Create a tuple containing a number and a list of 3 more numbers
"""

example = (4, [1,2,3])

"""Access the 2nd number in the list"""

new = example[1][1]
print(new)

"""Try to manipulate the nested list (you, surprisingly, should be able to)"""

example[1].append(7)
print(example)