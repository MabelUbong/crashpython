# -*- coding: utf-8 -*-
"""Code Club Session 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/warwickdatascience/beginners-python/blob/master/session_six/session_six_blank_template.ipynb

<a href="https://colab.research.google.com/github/warwickdatascience/beginners-python/blob/master/session_six/session_six_blank_template.ipynb" target="_parent"><img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/></a>

<center>Spotted a mistake? Report it <a href="https://github.com/warwickdatascience/beginners-python/issues/new">here</a></center>

# Beginner's Pythonâ€”Session Six Template

## Functions

### Introduction

Confirm that the type of `print` is `builtin_function_or_method`
"""

type(print)

Create a function that will print text when ran and run it twice

def test():
  print("This is a sentence.")

test()
test()

"""Create a function which returns a number and run it, storing the returned value in a variable"""

def num():
  return 0
number = num()
print(number)

"""### Standard Puzzles

Create a function to print the string 'Hello!' and run this
"""

def greet():
  print("Hello!")

"""Create a function which calls the above function five times"""

def greet_group():
    for i in range(5):
        greet()

greet_group()

"""Create a function to calculate and return the value of $2 + 2$"""

def two_plus_two():
  return 2+2
answer = two_plus_two()
print(answer)

"""## Function Arguments

### Introduction

Create a function to square an inputted number
"""

def square(num):
  print(num**2)

square(4)

"""Create a function to add two numbers, with the second parameter taking a default value of $1$"""

def addition(a,b=1):
  print(a+b)

"""### Standard Puzzles

Create a function to greet a named person, with fallback default behaviour
"""

def greet_person(name='unknown'):
  if name == 'unknown':
    print("Hello. What's your name?")
  else:
    print("Hello", name)

"""Create a function to calculate the area of a rectangle"""

def rectangle_area(w,h):
  return w*h
rectangle_area(2,2)

"""### Bonus Puzzles

Improve the greeter function above by using `None` as the default value for the name parameter
"""

def greet_person(name=None):
  if name is None:
    print("Hello. What's your name?")
  else:
    print("Hello", name)

"""## Recursion

### Introduction

Create a function to calculate the nth Fibonacci number using recursion
"""

def fibonacci(n):
  if n==0 or n==1:
    return 1
  return fibonacci(n-1)+ fibonacci(n-2)

fibonacci(5)

"""### Standard Puzzles

Create a function to calculate $n!$ using recursion
"""

def factorial(n):
  if n == 1:
     return 1
  return n*factorial(n-1)

factorial(4)

"""### Bonus Puzzles

Refactor the above function using an iterative paradigm
"""

def factorial(n):
  start =1 
  for i in range(2, n+1):
      prod *= id
  return prod

"""## Variable Scope

### Introduction

_The examples given in the presentation are not the most suitable to use as exercises, so instead just make sure you've gave them a good look over_

### Standard Puzzles

Predict what values will be printed when running the presentation code. Verify this
"""

The value that will be printed two times is a so 10 and 2

"""Rewrite the supplied code to avoid referencing global variables"""

n=10
def square(n):
  return n ** 2 

print(square(n))